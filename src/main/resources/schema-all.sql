-- SEZIONE SPRING BATCH

CREATE TABLE SSD_SECURITY.BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ;

CREATE TABLE SSD_SECURITY.BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME TIMESTAMP(9) NOT NULL,
	START_TIME TIMESTAMP(9) DEFAULT NULL ,
	END_TIME TIMESTAMP(9) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED TIMESTAMP(9),
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references SSD_SECURITY.BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ;

CREATE TABLE SSD_SECURITY.BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	PARAMETER_NAME VARCHAR(100) NOT NULL ,
	PARAMETER_TYPE VARCHAR(100) NOT NULL ,
	PARAMETER_VALUE VARCHAR(2500) ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references SSD_SECURITY.BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE SSD_SECURITY.BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	CREATE_TIME TIMESTAMP(9) NOT NULL,
	START_TIME TIMESTAMP(9) DEFAULT NULL ,
	END_TIME TIMESTAMP(9) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED TIMESTAMP(9),
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references SSD_SECURITY.BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE TABLE SSD_SECURITY.BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT LONGVARCHAR ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references SSD_SECURITY.BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ;

CREATE TABLE SSD_SECURITY.BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT LONGVARCHAR ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references SSD_SECURITY.BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ;

CREATE SEQUENCE SSD_SECURITY.BATCH_STEP_EXECUTION_SEQ;
CREATE SEQUENCE SSD_SECURITY.BATCH_JOB_EXECUTION_SEQ;
CREATE SEQUENCE SSD_SECURITY.BATCH_JOB_SEQ;






CREATE TABLE SSD_SECURITY.TASK_EXECUTION  (
	TASK_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY ,
	START_TIME TIMESTAMP(9) DEFAULT NULL ,
	END_TIME TIMESTAMP(9) DEFAULT NULL ,
	TASK_NAME  VARCHAR(100) ,
	EXIT_CODE INTEGER ,
	EXIT_MESSAGE VARCHAR(2500) ,
	ERROR_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED TIMESTAMP(9),
	EXTERNAL_EXECUTION_ID VARCHAR(255),
	PARENT_EXECUTION_ID BIGINT
);

CREATE TABLE SSD_SECURITY.TASK_EXECUTION_PARAMS  (
	TASK_EXECUTION_ID BIGINT NOT NULL ,
	TASK_PARAM VARCHAR(2500) ,
	constraint TASK_EXEC_PARAMS_FK foreign key (TASK_EXECUTION_ID)
	references SSD_SECURITY.TASK_EXECUTION(TASK_EXECUTION_ID)
) ;

CREATE TABLE SSD_SECURITY.TASK_TASK_BATCH (
  TASK_EXECUTION_ID BIGINT NOT NULL ,
  JOB_EXECUTION_ID BIGINT NOT NULL ,
	constraint TASK_EXEC_BATCH_FK foreign key (TASK_EXECUTION_ID)
	references SSD_SECURITY.TASK_EXECUTION(TASK_EXECUTION_ID)
) ;

CREATE SEQUENCE SSD_SECURITY.TASK_SEQ ;

CREATE TABLE SSD_SECURITY.TASK_LOCK  (
	LOCK_KEY CHAR(36) NOT NULL,
	REGION VARCHAR(100) NOT NULL,
	CLIENT_ID CHAR(36),
	CREATED_DATE TIMESTAMP(9) NOT NULL,
	constraint LOCK_PK primary key (LOCK_KEY, REGION)
);

-- FINE SEZIONE SPRING BATCH





insert into SSD_SECURITY.REQUEST   (idApplicazione, utente, ufficio, operation,status,date) values ('12', 'utente1', 'ufficio1', 'DELETE_APP','TO_BE_ASSIGNED','2024-08-26 15:00:00');

insert into SSD_SECURITY.REQUEST   (idApplicazione, utente, ufficio, operation,status,date) values ('13', 'utente2', 'ufficio2', 'DELETE_ALL_GROUPS','TO_BE_ASSIGNED','2024-08-27 15:00:00');


insert into SSD_SECURITY.REQUEST   (idApplicazione, utente, ufficio, operation,status,date,nomeRuolo) values ('14', 'utente3', 'ufficio3', 'DELETE_ALL_REGOLE_SICUREZZA','TO_BE_ASSIGNED','2024-08-28 15:00:00','miaRegola2');


insert into SSD_SECURITY.REQUEST   (idApplicazione, utente, ufficio, operation,status,date,tipoMotivazioneId) values ('15', 'utente4', 'ufficio4', 'DELETE_ALL_MOTIVAZIONI','TO_BE_ASSIGNED','2024-08-29 15:00:00','2');







 insert into SSD_SECURITY.REQUEST(utente, ufficio, operation,status,groupUpdate) values ('utente5', 'ufficio5', 'UPDATE_ALL_GROUPS','TO_BE_ASSIGNED',
'[
     {
         "nome": "miaRegola1",
         "app": "12"
     },
     {
         "nome": "miaRegola11",
         "app": "12"
     }
 ]'
);

 insert into SSD_SECURITY.REQUEST(utente, ufficio, operation,status,REGOLESICUREZZAUPDATE) values ('utente5', 'ufficio5', 'UPDATE_ALL_REGOLE_SICUREZZA','TO_BE_ASSIGNED',
'[
     {
         "ruolo": "miaRegola1",
         "appId": "12",
         "numeroRegola":"1",
         "progressivoRegola":"1",
         "dataInserimento":"2024-08-26 15:00:00"
     },
     {
              "ruolo": "miaRegola11",
              "appId": "12",
              "numeroRegola":"2",
              "progressivoRegola":"1",
              "dataInserimento":"2024-08-26 15:00:00"
     }
 ]'
);







insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('bollo','pippo','12');
insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('bollo','super','13');
insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('bollo1','super2','13');


insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('mirco','miaRegola1','14');
insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('bollo','miaRegola2','14');
insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('mirco','miaRegola2','14');
--insert into SSD_SECURITY.GROUPMEMBERS   (G_MEMBER,G_NAME,APP_ID) values ('mirco','miaRegola2','14');

insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','12','1','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','12','2','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','12','3','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','12','4','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','12','5','1',CURRENT_TIMESTAMP());


insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','13','1','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','13','2','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','13','3','1',CURRENT_TIMESTAMP());


insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','14','1','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','14','2','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola2','14','3','1',CURRENT_TIMESTAMP());

insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','14','2','1',CURRENT_TIMESTAMP());
insert into SSD_SECURITY.SEC_REGOLE_SICUREZZA (G_NAME, APP_ID, ID_BLOCCO_REGOLA, ID_PRG_BLOCCO_REGOLA,DATE_INS)
values ('miaRegola1','14','3','1',CURRENT_TIMESTAMP());


INSERT into SSD_SECURITY.GROUPS (G_NAME, G_APP) values  ('miaRegola1','12');
INSERT into SSD_SECURITY.GROUPS (G_NAME, G_APP) values  ('miaRegola11','12');
INSERT into SSD_SECURITY.GROUPS (G_NAME, G_APP) values  ('miaRegola2','13');
INSERT into SSD_SECURITY.GROUPS (G_NAME, G_APP) values  ('miaRegola3','13');
INSERT into SSD_SECURITY.GROUPS (G_NAME, G_APP) values  ('miaRegola4','13');

INSERT into SSD_SECURITY.SEC_QUALIFICA_ASSEGNABILITA (QUALIFICA_ASSEGNABILITA_ID, QUALIFICA_ASSEGNABILITA) values  (1,'qualifica1');
INSERT into SSD_SECURITY.SEC_QUALIFICA_ASSEGNABILITA (QUALIFICA_ASSEGNABILITA_ID, QUALIFICA_ASSEGNABILITA) values  (2,'qualifica1');

INSERT into SSD_SECURITY.SEC_RUOLO_QUALIF_ASSEGNABILITA(G_NAME, G_APP, QUALIFICA_ASSEGNABILITA_ID) values  ('miaRegola1','12',1);
INSERT into SSD_SECURITY.SEC_RUOLO_QUALIF_ASSEGNABILITA(G_NAME, G_APP, QUALIFICA_ASSEGNABILITA_ID) values  ('miaRegola2','13',2);


INSERT into SSD_SECURITY.GROUPS_AGGREG(G_NAME_PRINC, G_APP_PRINC, G_NAME_DIP,G_APP_DIP) values  ('miaRegola1','appPrincipale','regolaDip','appDip');

INSERT into SSD_SECURITY.GROUPS_AGGREG(G_NAME_PRINC, G_APP_PRINC, G_NAME_DIP,G_APP_DIP) values  ('regolaPrincipale','appPrincipale','miaRegola2','appDip');


INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('12','1');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('12','2');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('12','3');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('12','4');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('12','5');


INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('13','1');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('13','2');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('13','3');

INSERT into SSD_SECURITY.SEC_APPLICAZIONE_MOTIVAZIONE(APP_ID,ID_TIPO_MOTIVAZIONE) values('14','1');

INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('1','12','1');
INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('1','12','2');
INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('1','12','3');

INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('2','13','1');
INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('3','13','2');


INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('mirco','14','1');
INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('paolo','14','1');
INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('ciccio','14','1');

INSERT into SSD_SECURITY.SEC_APPLIC_MOTIV_MEMBERS(G_MEMBER,APP_ID,ID_TIPO_MOTIVAZIONE) values('mirco','15','2');

INSERT into SSD_SECURITY.SEC_APPLICAZIONE(APP_ID,APP_NAME) values('12','miaApp1');
INSERT into SSD_SECURITY.SEC_APPLICAZIONE(APP_ID,APP_NAME) values('13','miaApp2');
